//1. insertOne()--------------------------
db.employees.insertOne({
  name: 'Sue',
  age: 19,
  phone: {
    personal: '555-123-123',
    work: '555-456-456',
    ext: '2342',
  },
  privileges: 'user',
  favorites: { artist: 'Picasso', food: 'pizza' },
  finished: [17, 3],
  badges: ['blue', 'black'],
  points: [
    { points: 85, bonus: 20 },
    { points: 85, bonus: 10 },
  ],
});

//2. insertMany()--------------------------
db.employees.insertMany([
  {
    name: 'Bob',
    age: 42,
    phone: {
      personal: '555-123-123',
      work: '555-456-456',
      ext: '7673',
    },
    privileges: 'admin',
    favorites: { artist: 'Miro', food: 'meringue' },
    finished: [11, 25],
    badges: ['green'],
    points: [
      { points: 85, bonus: 20 },
      { points: 64, bonus: 12 },
    ],
  },
  {
    name: 'Willy',
    age: 22,
    phone: {
      personal: '555-123-123',
      work: '555-456-456',
      ext: '8263',
    },
    privileges: 'user',
    favorites: { artist: 'Cassatt', food: 'cake' },
    finished: [6],
    badges: ['blue', 'Picasso'],
    points: [
      { points: 81, bonus: 8 },
      { points: 55, bonus: 20 },
    ],
  },
]);

//3. insertMany()--------------------------
db.employees.insertMany([
  {
    name: 'John',
    age: 34,
    phone: {
      personal: '555-123-123',
      work: '555-456-456',
      ext: '2143',
    },
    privileges: 'admin',
    favorites: { artist: 'Chagall', food: 'chocolate' },
    finished: [5, 11],
    badges: ['Picasso', 'black'],
    points: [
      { points: 53, bonus: 15 },
      { points: 51, bonus: 15 },
    ],
  },
  {
    name: 'Steve',
    age: 23,
    phone: {
      personal: '555-123-123',
      work: '555-456-456',
      ext: '8253',
    },
    privileges: 'user',
    favorites: { artist: 'Noguchi', food: 'nougat' },
    finished: [14, 6],
    badges: ['orange'],
    points: [{ points: 71, bonus: 20 }],
  },
  {
    name: 'Martin',
    age: 43,
    phone: {
      personal: '555-123-123',
      work: '555-456-456',
      ext: '5623',
    },
    privileges: 'user',
    favorites: { food: 'pizza', artist: 'Picasso' },
    finished: [18, 12],
    badges: ['black', 'blue'],
    points: [
      { points: 78, bonus: 8 },
      { points: 57, bonus: 7 },
    ],
  },
]);

//4. Find the employee with whose name is Steve---------------------
db.employees.find({ name: 'Steve' }).pretty();
//5. Find all employees whose age is greater than 30-----------------
db.employees.find({ age: { $gt: 30 } }).pretty();
//6.Find the employee whose extension is 2143-------------------------
// extension is nested in phone object, 
//to get nested elem we need to use double quotes ==>>
db.employees.find({ "phone.ext": '2143' }).pretty();

//updateOne()------------------------------------------------------------
//Following with the collection employees, let’s update the user "Martin" with his new extension number.
db.employees.updateOne(
  { "name": "Martin"},
  { $set: { "phone.ext": '1234' }}
)

//! Notice that when we need to access nested objects like the ext field inside phone,
// we need to use dot notation like JavaScript objects.
// They have to be in double quotes: "phone.ext"


//updateMany()------------------------------------------------------------
//We want to update all employees older than 30 so that their favourite writer is Cervantes.

db.employees.updateMany(
  { "age": { $gte: 30 }},
	{ $set: { "favorites.writer": "Cervantes" }}
)

//replaceOne()------------------------------------------------------------
db.collection.replaceOne()
// replaces the first document that matches the specified filter even if there are more than one.

var susan = { 
  "name" : "Susan",
  "age" : 25,
  "phone" : { "personal" : "555-223-223", "work" : "555-421-426", "ext" : 4240 },
  "privileges" : "user",
}

db.employees.replaceOne(
  { "name": "Martin"},
  susan
)

let ashraf = { 
  "name" : "Ashraf",
  "age" : 34,
  "phone" : { "personal" : "786-779-8588", "work" : "555-421-426", "ext" : '' },
  "privileges" : "admin",
}
db.employees.replaceOne(
  { "name": "Susan"},
  ashraf
)

//deleteOne------------------------------
db.employees.deleteOne({"_id" : ObjectId("5e161f4c9a425c8be1032517")})

//deleteMany------------------------------
db.employees.deleteMany({age: { $lt:34}})

//Independent Practice===============================================
Now that you know how to insert, delete, query and update documents, let’s practice!

db.employees.insertMany([{
    name: 'Steve',
    age: 23,
    phone: {
      personal: '555-123-123',
      work: '555-456-456',
      ext: '8253',
    },
    privileges: 'user',
    favorites: { artist: 'Noguchi', food: 'nougat' },
    finished: [14, 6],
    badges: ['orange'],
    points: [{ points: 71, bonus: 20 }],
  },{
    name: 'Willy',
    age: 22,
    phone: {
      personal: '555-123-123',
      work: '555-456-456',
      ext: '8263',
    },
    privileges: 'user',
    favorites: { artist: 'Cassatt', food: 'cake' },
    finished: [6],
    badges: ['blue', 'Picasso'],
    points: [
      { points: 81, bonus: 8 },
      { points: 55, bonus: 20 },
    ],
  }])

//Find all employees that are over 30.

db.employees.find({age: { $gt: 30}})

//Find all employees that are less than or equal to 30.

db.employees.find({age: { $lte: 30}})


//Find all the employees whose favorite food is pizza.

db.employees.find({"favorites.food": 'pizza'})

//Change Willy’s personal phone number to “93-123-45-67”.

db.employees.updateOne({name: 'Willy'}, { $set: {"phone.personal": '93-123-45-67'}})

//Change Bob’s privilege to normal user.

db.employees.updateOne({name: 'Bob'},{ $set: {privileges: 'user'}})

//Find all employees whose favorite artist is equal to Picasso.

db.employees.find({"favorites.artist": { $eq: 'Picasso'}})

//Delete the user John.

db.employees.deleteOne({name: 'John'})

//(EXTRA) Add a bonus of 15 to all those who have a bonus less than 10.

 db.employees.find().forEach(function(doc) {(doc.points.forEach(function(p){print(p.bonus)}))})
20
12
20
10
20
8
20
db.employees.updateMany({"points.forEach(function(doc){doc.bonus}": { $lt:10}},{ $inc:{bonus:15}})

> db.employees.updateMany({"points.forEach(function(doc){doc.bonus}": { $lt:10}},{ $inc:{"doc.bonus":15}})
{ "acknowledged" : true, "matchedCount" : 0, "modifiedCount" : 0 }

db.employees.find({"points.forEach(function(doc){doc.bonus}": { $lt:10}})